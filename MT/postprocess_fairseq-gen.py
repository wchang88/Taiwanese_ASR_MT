import argparse

def get_args():
   parser = argparse.ArgumentParser()
   parser.add_argument("raw_pred", type=str) # raw prediction generated by fairseq-generate
   parser.add_argument("aligned_pred", type=str) # path to output for aligned predictions for BLEU
   parser.add_argument("gold_size", type=int) # number of ground truths

   args = parser.parse_args()
   return args

def align_pred_to_gold(preds, gold_size, output):
   with open(output, 'w') as f:
      for i in range(gold_size):
         if i in preds:
               f.write(preds[i])
         else:
               f.write("\n") # write out an empty line where fairseq-generate skipped


if __name__ == '__main__':
   args = get_args()

   with open(args.raw_pred, encoding="utf-8") as f:
        preds = {}
        line = f.readline()
        while line:
            if line[0] == 'D': # 'D' indicated the de-tokenized hypothesis
               # strip and clean
               splt = line.split()
               line_id = splt[0][2:] # lines always begin with <letter><dash><ID>
               if line_id in preds:
                   print("SOMETHING WENT WRONG! THERE WAS A DUPLICATE ID!!")
               preds[line_id] = line[len(splt[0]) + len(splt[1]) + 2:] # strip out the fairseq-gen identifiers
            line = f.readline()
   
   align_pred_to_gold(preds, args.gold_size, args.aligned_pred)